import{_ as e,c as s,a2 as i,o as n}from"./chunks/framework.YPpNXepj.js";const k=JSON.parse('{"title":"面试派","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),t={name:"README.md"};function l(o,a,p,r,h,d){return n(),s("div",null,a[0]||(a[0]=[i(`<h1 id="面试派" tabindex="-1">面试派 <a class="header-anchor" href="#面试派" aria-label="Permalink to &quot;面试派&quot;">​</a></h1><p>网址 <a href="https://www.mianshipai.com/" target="_blank" rel="noreferrer">https://www.mianshipai.com/</a></p><p><a href="https://juejin.cn/user/1714893868765373" target="_blank" rel="noreferrer">双越老师</a>联合多位精英博主制作，系统专业的前端面试导航，大厂面试规范，开源免费。</p><h2 id="本地运行" tabindex="-1">本地运行 <a class="header-anchor" href="#本地运行" aria-label="Permalink to &quot;本地运行&quot;">​</a></h2><p>git clone 源代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm i</span></span>
<span class="line"><span>npm run docs:dev</span></span></code></pre></div><h2 id="贡献代码" tabindex="-1">贡献代码 <a class="header-anchor" href="#贡献代码" aria-label="Permalink to &quot;贡献代码&quot;">​</a></h2><h3 id="要求" tabindex="-1">要求 <a class="header-anchor" href="#要求" aria-label="Permalink to &quot;要求&quot;">​</a></h3><ul><li>有自己的博客或开源项目，有一定的关注度和访问量</li><li>联系作者（vx <code>fe-wfp</code>，备注：<code>面试派贡献者</code>）</li></ul><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h3><ul><li>基于当前 <code>main</code> 分支最新代码开发</li><li>提交 PR 到 <code>main</code> 分支 <ul><li>注意查看 commits 和 files changed ，不要有无关记录和改动，否则不予合并</li><li>添加 reviewer <code>wangfupeng1988</code></li></ul></li><li>管理员每天审核 PR 合并或者回复建议</li></ul><h3 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h3><p>现在有多人一起维护，为了方便大家高效协作，避免内容冲突，因此设定此步骤。</p><p><strong>1. 制定计划，包括范围和有效期</strong></p><p>范围，即我接下来要完成哪几个题目，每次最多写 5 个。可以是现有的未解答、过期的题目，也可以自己新加的题目，不要重复即可。</p><p>有效期，即我要在未来几天之内完成，最长写 5 天。即 5 天之内必须完成，否则过期。</p><p>举个例子，今天是 02.07，我计划未来 5 天之内完成 <code>cross-test.md</code> 里的这 3 个题目，我需要改动 <code>cross-test.md</code> 文件，如下</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 什么是 OOP ，面向对象三要素是什么？</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@双越 将于 2025.02.12 之前提交答案。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 前端常见的设计模式有哪些？以及应用场景</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@双越 将于 2025.02.12 之前提交答案。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## 观察者模式和发布订阅模式的区别</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@双越 将于 2025.02.12 之前提交答案。</span></span></code></pre></div><p>这样就代表了我要在 5 天之内解答这 3 个题目。</p><p><strong>2. 把刚才修改的内容提交 PR 到 <code>main</code> 分支。</strong></p><p><strong>3. 接下来几天按计划完成内容，并提交 PR 到 <code>main</code> 分支。如过期可能会被其他同学领取。</strong></p><h2 id="发布上线" tabindex="-1">发布上线 <a class="header-anchor" href="#发布上线" aria-label="Permalink to &quot;发布上线&quot;">​</a></h2><p>管理员会统一提交 PR ，把 <code>main</code> 合并到 <code>prod-deploy</code> 分支，合并后即可触发 <a href="https://github.com/mianshipai/mianshipai-web/actions" target="_blank" rel="noreferrer">actions</a> 并发布上线。</p>`,23)]))}const g=e(t,[["render",l]]);export{k as __pageData,g as default};
