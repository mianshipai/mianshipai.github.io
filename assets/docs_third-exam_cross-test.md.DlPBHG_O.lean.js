import{_ as i,c as a,a2 as n,o as h}from"./chunks/framework.YPpNXepj.js";const o=JSON.parse('{"title":"交叉面试","description":"","frontmatter":{},"headers":[],"relativePath":"docs/third-exam/cross-test.md","filePath":"docs/third-exam/cross-test.md"}'),l={name:"docs/third-exam/cross-test.md"};function t(k,s,e,p,r,E){return h(),a("div",null,s[0]||(s[0]=[n(`<h1 id="交叉面试" tabindex="-1">交叉面试 <a class="header-anchor" href="#交叉面试" aria-label="Permalink to &quot;交叉面试&quot;">​</a></h1><p>二面结束以后，有可能会再找隔壁部门的高级/资深工程师交叉面试。交叉面试会综合考察候选人的技术能力。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>不一定所有面试都会有交叉面试，但这些面试题要刷一遍。</p></div><h2 id="求两个数组的交集和并集" tabindex="-1">求两个数组的交集和并集 <a class="header-anchor" href="#求两个数组的交集和并集" aria-label="Permalink to &quot;求两个数组的交集和并集&quot;">​</a></h2><p>给两个数组，求数组的交集和并集</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getIntersection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 交集...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUnion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 并集...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>参考答案</p><details class="details custom-block"><summary>Details</summary><p>要点</p><ul><li>交集，转换为 Set ，因为 Set has 比数组 includes 快很多（前者 O(1) 后者 O(n)）</li><li>并集，直接 add 即可，利用 Set 去重特性</li></ul><p>代码</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arr2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 交集</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getIntersection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> set2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr2)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr1) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (set2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 注意，这里要用 Set has 方法，比数组的 includes 快很多</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 并集</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUnion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">arr2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> arr2) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 利用 Set 自动去重的特性</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 测试</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;交集&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getIntersection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1, arr2))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;并集&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUnion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(arr1, arr2))</span></span></code></pre></div></details><h2 id="数组转树-树转数组" tabindex="-1">数组转树，树转数组 <a class="header-anchor" href="#数组转树-树转数组" aria-label="Permalink to &quot;数组转树，树转数组&quot;">​</a></h2><h2 id="cookie-localstorage-sessionstorage-三者有什么区别-有什么应用场景" tabindex="-1">cookie localStorage sessionStorage 三者有什么区别，有什么应用场景？ <a class="header-anchor" href="#cookie-localstorage-sessionstorage-三者有什么区别-有什么应用场景" aria-label="Permalink to &quot;cookie localStorage sessionStorage 三者有什么区别，有什么应用场景？&quot;">​</a></h2><h2 id="前端会有哪些安全问题-该如何预防" tabindex="-1">前端会有哪些安全问题？该如何预防？ <a class="header-anchor" href="#前端会有哪些安全问题-该如何预防" aria-label="Permalink to &quot;前端会有哪些安全问题？该如何预防？&quot;">​</a></h2><h2 id="常见的-git-命令有哪些-如何使用-git-多人协作开发" tabindex="-1">常见的 git 命令有哪些？如何使用 git 多人协作开发？ <a class="header-anchor" href="#常见的-git-命令有哪些-如何使用-git-多人协作开发" aria-label="Permalink to &quot;常见的 git 命令有哪些？如何使用 git 多人协作开发？&quot;">​</a></h2><p>面向基础候选人</p><h2 id="是否熟悉-linux-系统-常见的-linux-命令有哪些" tabindex="-1">是否熟悉 Linux 系统，常见的 Linux 命令有哪些？ <a class="header-anchor" href="#是否熟悉-linux-系统-常见的-linux-命令有哪些" aria-label="Permalink to &quot;是否熟悉 Linux 系统，常见的 Linux 命令有哪些？&quot;">​</a></h2><h2 id="如何调试前端代码" tabindex="-1">如何调试前端代码？ <a class="header-anchor" href="#如何调试前端代码" aria-label="Permalink to &quot;如何调试前端代码？&quot;">​</a></h2><h2 id="移动端-h5-如何抓包网络请求" tabindex="-1">移动端 H5 如何抓包网络请求？ <a class="header-anchor" href="#移动端-h5-如何抓包网络请求" aria-label="Permalink to &quot;移动端 H5 如何抓包网络请求？&quot;">​</a></h2><h2 id="网页重绘-repaint-和重排-reflow-有什么区别" tabindex="-1">网页重绘 repaint 和重排 reflow 有什么区别 <a class="header-anchor" href="#网页重绘-repaint-和重排-reflow-有什么区别" aria-label="Permalink to &quot;网页重绘 repaint 和重排 reflow 有什么区别&quot;">​</a></h2><h2 id="网页多标签页之间如何通讯-和-iframe-如何通讯" tabindex="-1">网页多标签页之间如何通讯？和 iframe 如何通讯？ <a class="header-anchor" href="#网页多标签页之间如何通讯-和-iframe-如何通讯" aria-label="Permalink to &quot;网页多标签页之间如何通讯？和 iframe 如何通讯？&quot;">​</a></h2><h2 id="什么是-axios-拦截器-能用来做什么" tabindex="-1">什么是 axios 拦截器，能用来做什么？ <a class="header-anchor" href="#什么是-axios-拦截器-能用来做什么" aria-label="Permalink to &quot;什么是 axios 拦截器，能用来做什么？&quot;">​</a></h2><h2 id="是否熟悉-performance-api-是否了解常见的性能指标" tabindex="-1">是否熟悉 Performance API ，是否了解常见的性能指标？ <a class="header-anchor" href="#是否熟悉-performance-api-是否了解常见的性能指标" aria-label="Permalink to &quot;是否熟悉 Performance API ，是否了解常见的性能指标？&quot;">​</a></h2><p>FP FCP LCP 等</p><h2 id="sourcemap-有何作用-如何配置" tabindex="-1">sourcemap 有何作用，如何配置？ <a class="header-anchor" href="#sourcemap-有何作用-如何配置" aria-label="Permalink to &quot;sourcemap 有何作用，如何配置？&quot;">​</a></h2><h2 id="什么是-https-中间人攻击-如何预防" tabindex="-1">什么是 HTTPS 中间人攻击，如何预防 <a class="header-anchor" href="#什么是-https-中间人攻击-如何预防" aria-label="Permalink to &quot;什么是 HTTPS 中间人攻击，如何预防&quot;">​</a></h2><h2 id="什么是-oop-面向对象三要素是什么" tabindex="-1">什么是 OOP ，面向对象三要素是什么？ <a class="header-anchor" href="#什么是-oop-面向对象三要素是什么" aria-label="Permalink to &quot;什么是 OOP ，面向对象三要素是什么？&quot;">​</a></h2><h2 id="前端常见的设计模式有哪些-以及应用场景" tabindex="-1">前端常见的设计模式有哪些？以及应用场景 <a class="header-anchor" href="#前端常见的设计模式有哪些-以及应用场景" aria-label="Permalink to &quot;前端常见的设计模式有哪些？以及应用场景&quot;">​</a></h2><h2 id="观察者模式和发布订阅模式的区别" tabindex="-1">观察者模式和发布订阅模式的区别 <a class="header-anchor" href="#观察者模式和发布订阅模式的区别" aria-label="Permalink to &quot;观察者模式和发布订阅模式的区别&quot;">​</a></h2><h2 id="后端返回-10w-条数据-前端该如何处理" tabindex="-1">后端返回 10w 条数据，前端该如何处理？ <a class="header-anchor" href="#后端返回-10w-条数据-前端该如何处理" aria-label="Permalink to &quot;后端返回 10w 条数据，前端该如何处理？&quot;">​</a></h2><h2 id="一个网页-一开始很流畅-越用越卡顿-你怎么办" tabindex="-1">一个网页，一开始很流畅，越用越卡顿，你怎么办？ <a class="header-anchor" href="#一个网页-一开始很流畅-越用越卡顿-你怎么办" aria-label="Permalink to &quot;一个网页，一开始很流畅，越用越卡顿，你怎么办？&quot;">​</a></h2><p>检查 JS 内存泄漏</p><h2 id="一个-web-系统-加载很慢-交给你来优化-你会怎么办" tabindex="-1">一个 web 系统，加载很慢，交给你来优化，你会怎么办？ <a class="header-anchor" href="#一个-web-系统-加载很慢-交给你来优化-你会怎么办" aria-label="Permalink to &quot;一个 web 系统，加载很慢，交给你来优化，你会怎么办？&quot;">​</a></h2><h2 id="你知道哪些前端或-js-工具链-它们分别什么作用" tabindex="-1">你知道哪些前端或 JS 工具链？它们分别什么作用？ <a class="header-anchor" href="#你知道哪些前端或-js-工具链-它们分别什么作用" aria-label="Permalink to &quot;你知道哪些前端或 JS 工具链？它们分别什么作用？&quot;">​</a></h2><p>webpack vite rollup babel SWC esbuild...</p>`,32)]))}const g=i(l,[["render",t]]);export{o as __pageData,g as default};
