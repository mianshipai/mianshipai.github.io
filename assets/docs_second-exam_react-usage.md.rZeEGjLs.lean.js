import{_ as e,c as t,a0 as s,o as i}from"./chunks/framework.P9qPzDnn.js";const k=JSON.parse('{"title":"React 使用","description":"","frontmatter":{},"headers":[],"relativePath":"docs/second-exam/react-usage.md","filePath":"docs/second-exam/react-usage.md"}'),r={name:"docs/second-exam/react-usage.md"};function h(c,a,o,l,n,d){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="react-使用" tabindex="-1">React 使用 <a class="header-anchor" href="#react-使用" aria-label="Permalink to &quot;React 使用&quot;">​</a></h1><p>React 是全球应用最广泛的框架，国内大厂多用 React</p><h2 id="react-组件生命周期" tabindex="-1">React 组件生命周期 <a class="header-anchor" href="#react-组件生命周期" aria-label="Permalink to &quot;React 组件生命周期&quot;">​</a></h2><h2 id="react-父子组件生命周期调用顺序" tabindex="-1">React 父子组件生命周期调用顺序 <a class="header-anchor" href="#react-父子组件生命周期调用顺序" aria-label="Permalink to &quot;React 父子组件生命周期调用顺序&quot;">​</a></h2><h2 id="react-组件通讯方式" tabindex="-1">React 组件通讯方式 <a class="header-anchor" href="#react-组件通讯方式" aria-label="Permalink to &quot;React 组件通讯方式&quot;">​</a></h2><h2 id="state-和-props-有什么区别" tabindex="-1">state 和 props 有什么区别？ <a class="header-anchor" href="#state-和-props-有什么区别" aria-label="Permalink to &quot;state 和 props 有什么区别？&quot;">​</a></h2><h2 id="react-有哪些内置-hooks" tabindex="-1">React 有哪些内置 Hooks ？ <a class="header-anchor" href="#react-有哪些内置-hooks" aria-label="Permalink to &quot;React 有哪些内置 Hooks ？&quot;">​</a></h2><h2 id="useeffect-和-uselayouteffect-的区别" tabindex="-1">useEffect 和 useLayoutEffect 的区别 <a class="header-anchor" href="#useeffect-和-uselayouteffect-的区别" aria-label="Permalink to &quot;useEffect 和 useLayoutEffect 的区别&quot;">​</a></h2><h2 id="为何-dev-模式下-useeffect-执行两次" tabindex="-1">为何 dev 模式下 useEffect 执行两次？ <a class="header-anchor" href="#为何-dev-模式下-useeffect-执行两次" aria-label="Permalink to &quot;为何 dev 模式下 useEffect 执行两次？&quot;">​</a></h2><h2 id="react-闭包陷阱" tabindex="-1">React 闭包陷阱 <a class="header-anchor" href="#react-闭包陷阱" aria-label="Permalink to &quot;React 闭包陷阱&quot;">​</a></h2><h2 id="react-state-不可变数据" tabindex="-1">React state 不可变数据 <a class="header-anchor" href="#react-state-不可变数据" aria-label="Permalink to &quot;React state 不可变数据&quot;">​</a></h2><p>immer.js</p><h2 id="react-state-异步更新" tabindex="-1">React state 异步更新 <a class="header-anchor" href="#react-state-异步更新" aria-label="Permalink to &quot;React state 异步更新&quot;">​</a></h2><p>React18 更新了“自动批处理”，全部都是异步更新</p><h2 id="react-state-的-合并-特性" tabindex="-1">React state 的“合并”特性 <a class="header-anchor" href="#react-state-的-合并-特性" aria-label="Permalink to &quot;React state 的“合并”特性&quot;">​</a></h2><h2 id="什么是-react-受控组件" tabindex="-1">什么是 React 受控组件？ <a class="header-anchor" href="#什么是-react-受控组件" aria-label="Permalink to &quot;什么是 React 受控组件？&quot;">​</a></h2><h2 id="使用-react-hook-实现-usecount" tabindex="-1">使用 React Hook 实现 useCount <a class="header-anchor" href="#使用-react-hook-实现-usecount" aria-label="Permalink to &quot;使用 React Hook 实现 useCount&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// count 从 0 计数，每一秒 +1 （可使用 setInterval）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useTimer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="使用-react-hook-实现-userequest" tabindex="-1">使用 React Hook 实现 useRequest <a class="header-anchor" href="#使用-react-hook-实现-userequest" aria-label="Permalink to &quot;使用 React Hook 实现 useRequest&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loading</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可只考虑 get 请求</span></span></code></pre></div><h2 id="react-项目可做哪些性能优化" tabindex="-1">React 项目可做哪些性能优化？ <a class="header-anchor" href="#react-项目可做哪些性能优化" aria-label="Permalink to &quot;React 项目可做哪些性能优化？&quot;">​</a></h2><p><code>useMemo</code> <code>useCallback</code> <code>React.memo</code> Suspense 异步组件 路由懒加载</p><h2 id="如何统一监听-react-组件报错" tabindex="-1">如何统一监听 React 组件报错 <a class="header-anchor" href="#如何统一监听-react-组件报错" aria-label="Permalink to &quot;如何统一监听 React 组件报错&quot;">​</a></h2><h2 id="react19-升级了哪些新特性" tabindex="-1">React19 升级了哪些新特性？ <a class="header-anchor" href="#react19-升级了哪些新特性" aria-label="Permalink to &quot;React19 升级了哪些新特性？&quot;">​</a></h2><h2 id="简述-redux-单向数据流" tabindex="-1">简述 Redux 单向数据流 <a class="header-anchor" href="#简述-redux-单向数据流" aria-label="Permalink to &quot;简述 Redux 单向数据流&quot;">​</a></h2><h2 id="用过哪些-redux-中间件" tabindex="-1">用过哪些 Redux 中间件？ <a class="header-anchor" href="#用过哪些-redux-中间件" aria-label="Permalink to &quot;用过哪些 Redux 中间件？&quot;">​</a></h2><h2 id="你用过哪些-react-状态管理库" tabindex="-1">你用过哪些 React 状态管理库？ <a class="header-anchor" href="#你用过哪些-react-状态管理库" aria-label="Permalink to &quot;你用过哪些 React 状态管理库？&quot;">​</a></h2><p>Redux Mobx dva zustand recoil</p><h2 id="是否用过-ssr-服务端渲染" tabindex="-1">是否用过 SSR 服务端渲染？ <a class="header-anchor" href="#是否用过-ssr-服务端渲染" aria-label="Permalink to &quot;是否用过 SSR 服务端渲染？&quot;">​</a></h2>`,29)]))}const p=e(r,[["render",h]]);export{k as __pageData,p as default};
