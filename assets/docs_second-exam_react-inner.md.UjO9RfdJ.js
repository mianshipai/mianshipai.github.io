import{_ as e,c as t,a2 as r,o as c}from"./chunks/framework.YPpNXepj.js";const f=JSON.parse('{"title":"React 原理","description":"","frontmatter":{},"headers":[],"relativePath":"docs/second-exam/react-inner.md","filePath":"docs/second-exam/react-inner.md"}'),o={name:"docs/second-exam/react-inner.md"};function i(n,a,d,l,h,s){return c(),t("div",null,a[0]||(a[0]=[r('<h1 id="react-原理" tabindex="-1">React 原理 <a class="header-anchor" href="#react-原理" aria-label="Permalink to &quot;React 原理&quot;">​</a></h1><p>国内面试，大厂必考原理。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li>目标<strong>不在</strong>中大厂的同学，可以略过这一节。</li><li>对 React 使用尚不熟练的同学，不要在此花费太多精力，先熟悉使用再说。</li></ol></div><h2 id="jsx-的本质是什么" tabindex="-1">JSX 的本质是什么？ <a class="header-anchor" href="#jsx-的本质是什么" aria-label="Permalink to &quot;JSX 的本质是什么？&quot;">​</a></h2><h2 id="如何理解-react-fiber-架构" tabindex="-1">如何理解 React fiber 架构？ <a class="header-anchor" href="#如何理解-react-fiber-架构" aria-label="Permalink to &quot;如何理解 React fiber 架构？&quot;">​</a></h2><h2 id="fiber-结构和普通-vnode-有什么区别" tabindex="-1">Fiber 结构和普通 VNode 有什么区别？ <a class="header-anchor" href="#fiber-结构和普通-vnode-有什么区别" aria-label="Permalink to &quot;Fiber 结构和普通 VNode 有什么区别？&quot;">​</a></h2><h2 id="简述-react-diff-算法过程" tabindex="-1">简述 React diff 算法过程 <a class="header-anchor" href="#简述-react-diff-算法过程" aria-label="Permalink to &quot;简述 React diff 算法过程&quot;">​</a></h2><h2 id="简述-react-和-vue-diff-算法的区别" tabindex="-1">简述 React 和 Vue diff 算法的区别 <a class="header-anchor" href="#简述-react-和-vue-diff-算法的区别" aria-label="Permalink to &quot;简述 React 和 Vue diff 算法的区别&quot;">​</a></h2><h2 id="为何-react-jsx-循环需要使用-key" tabindex="-1">为何 React JSX 循环需要使用 <code>key</code> ？ <a class="header-anchor" href="#为何-react-jsx-循环需要使用-key" aria-label="Permalink to &quot;为何 React JSX 循环需要使用 `key` ？&quot;">​</a></h2><h2 id="react-事件和-dom-事件有什么区别" tabindex="-1">React 事件和 DOM 事件有什么区别？ <a class="header-anchor" href="#react-事件和-dom-事件有什么区别" aria-label="Permalink to &quot;React 事件和 DOM 事件有什么区别？&quot;">​</a></h2><p>合成事件</p><h2 id="简述-react-batchupdate-机制" tabindex="-1">简述 React batchUpdate 机制 <a class="header-anchor" href="#简述-react-batchupdate-机制" aria-label="Permalink to &quot;简述 React batchUpdate 机制&quot;">​</a></h2><h2 id="简述-react-事务机制" tabindex="-1">简述 React 事务机制 <a class="header-anchor" href="#简述-react-事务机制" aria-label="Permalink to &quot;简述 React 事务机制&quot;">​</a></h2><h2 id="如何理解-react-concurrency-并发机制" tabindex="-1">如何理解 React concurrency 并发机制 <a class="header-anchor" href="#如何理解-react-concurrency-并发机制" aria-label="Permalink to &quot;如何理解 React concurrency 并发机制&quot;">​</a></h2><h2 id="简述-react-reconciliation-协调的过程" tabindex="-1">简述 React reconciliation 协调的过程 <a class="header-anchor" href="#简述-react-reconciliation-协调的过程" aria-label="Permalink to &quot;简述 React reconciliation 协调的过程&quot;">​</a></h2><h2 id="react-组件渲染和更新的全过程" tabindex="-1">React 组件渲染和更新的全过程 <a class="header-anchor" href="#react-组件渲染和更新的全过程" aria-label="Permalink to &quot;React 组件渲染和更新的全过程&quot;">​</a></h2><h2 id="为何-react-hooks-不能放在条件或循环之内" tabindex="-1">为何 React Hooks 不能放在条件或循环之内？ <a class="header-anchor" href="#为何-react-hooks-不能放在条件或循环之内" aria-label="Permalink to &quot;为何 React Hooks 不能放在条件或循环之内？&quot;">​</a></h2>',17)]))}const b=e(o,[["render",i]]);export{f as __pageData,b as default};
